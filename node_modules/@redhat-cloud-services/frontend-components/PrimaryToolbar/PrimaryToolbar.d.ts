import React from 'react';
import { ButtonProps, PaginationProps } from '@patternfly/react-core';
import { ActionsProps } from './Actions';
import { BulkSelectProps } from '../BulkSelect';
import { ConditionalFilterProps } from '../ConditionalFilter';
import { DownloadButtonProps } from '../DownloadButton';
import { FilterChipsProps } from '../FilterChips';
import { SortByProps } from './SortBy';
import './primary-toolbar.scss';
export declare type PrimaryToolbarExpandAllObject = {
    onClick: (event: React.MouseEvent<Element, MouseEvent>, isExpanded: boolean) => void;
    isAllExpanded?: boolean;
    buttonProps?: ButtonProps;
    isDisabled?: boolean;
};
export interface PrimaryToolbarProps {
    id?: string | number;
    className?: string;
    toggleIsExpanded?: () => void;
    bulkSelect?: BulkSelectProps;
    filterConfig?: ConditionalFilterProps;
    dedicatedAction?: React.ReactNode;
    pagination?: Omit<PaginationProps, 'ref'>;
    sortByConfig?: SortByProps;
    exportConfig?: DownloadButtonProps;
    activeFiltersConfig?: FilterChipsProps;
    actionsConfig?: ActionsProps;
    expandAll?: React.ReactNode | PrimaryToolbarExpandAllObject;
    useMobileLayout?: boolean;
}
declare const PrimaryToolbar: React.FunctionComponent<PrimaryToolbarProps>;
export default PrimaryToolbar;
