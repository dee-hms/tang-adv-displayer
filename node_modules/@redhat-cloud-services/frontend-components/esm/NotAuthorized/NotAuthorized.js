var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';
import { LockIcon } from '@patternfly/react-icons';
import '../NotAuthorized/NotAuthorized.css';
var ContactBody = function () { return (_jsxs(React.Fragment, { children: ["Contact your organization administrator(s) for more information or visit\u00A0", _jsx("a", __assign({ href: "./settings/my-user-access" }, { children: "My User Access" })), "\u00A0 to learn more about your permissions."] })); };
var NotAuthorized = function (_a) {
    var _b = _a.prevPageButtonText, prevPageButtonText = _b === void 0 ? 'Return to previous page' : _b, _c = _a.toLandingPageText, toLandingPageText = _c === void 0 ? 'Go to landing page' : _c, title = _a.title, _d = _a.actions, actions = _d === void 0 ? null : _d, serviceName = _a.serviceName, _e = _a.icon, Icon = _e === void 0 ? LockIcon : _e, _f = _a.description, description = _f === void 0 ? _jsx(ContactBody, {}) : _f, _g = _a.showReturnButton, showReturnButton = _g === void 0 ? true : _g, className = _a.className, props = __rest(_a, ["prevPageButtonText", "toLandingPageText", "title", "actions", "serviceName", "icon", "description", "showReturnButton", "className"]);
    var heading = title || "You do not have access to ".concat(serviceName);
    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.full, className: "ins-c-not-authorized ".concat(className || '') }, props, { children: [_jsx(EmptyStateIcon, { icon: Icon }), _jsx(Title, __assign({ headingLevel: "h5", size: "lg" }, { children: heading })), _jsx(EmptyStateBody, { children: description }), actions, showReturnButton &&
                (document.referrer ? (_jsx(Button, __assign({ variant: "primary", onClick: function () { return history.back(); } }, { children: prevPageButtonText }))) : (_jsx(Button, __assign({ variant: "primary", component: "a", href: "." }, { children: toLandingPageText }))))] })));
};
export default NotAuthorized;
//# sourceMappingURL=NotAuthorized.js.map