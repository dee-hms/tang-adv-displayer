var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { jsx as _jsx } from "react/jsx-runtime";
import { useEffect, useState } from 'react';
import { Bullseye, Spinner } from '@patternfly/react-core';
import { RBACContext, doesHavePermissions, getRBAC, hasAllPermissions, initialPermissions, } from '@redhat-cloud-services/frontend-components-utilities/RBAC';
var hasAccessWithUserPermissions = function (userPermissions) {
    return function (requiredPermissions, checkAll) {
        return checkAll ? hasAllPermissions(userPermissions, requiredPermissions) : doesHavePermissions(userPermissions, requiredPermissions);
    };
};
export var RBACProvider = function (_a) {
    var appName = _a.appName, children = _a.children;
    var _b = useState(initialPermissions), permissionState = _b[0], setPermissionState = _b[1];
    var fetchPermissions = function () { return __awaiter(void 0, void 0, void 0, function () {
        var _a, isOrgAdmin, userPermissions;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4, getRBAC(appName, true)];
                case 1:
                    _a = _b.sent(), isOrgAdmin = _a.isOrgAdmin, userPermissions = _a.permissions;
                    setPermissionState(function (currentPerms) { return (__assign(__assign({}, currentPerms), { isLoading: false, isOrgAdmin: isOrgAdmin, permissions: userPermissions })); });
                    return [2];
            }
        });
    }); };
    useEffect(function () {
        if (appName) {
            fetchPermissions();
        }
    }, [appName]);
    return (_jsx(RBACContext.Provider, __assign({ value: __assign(__assign({}, permissionState), { hasAccess: hasAccessWithUserPermissions((permissionState === null || permissionState === void 0 ? void 0 : permissionState.permissions) || []) }) }, { children: !permissionState.isLoading ? (children) : (_jsx(Bullseye, { children: _jsx(Spinner, { size: "xl" }) })) })));
};
//# sourceMappingURL=RBACProvider.js.map