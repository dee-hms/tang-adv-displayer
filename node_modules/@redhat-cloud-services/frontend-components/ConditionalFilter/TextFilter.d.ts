import React, { FormEvent, MouseEventHandler } from 'react';
import './conditional-filter.scss';
export declare function isFilterValue(item: string | FilterValue): item is FilterValue;
export interface FilterItem {
    label: Node | string;
    name?: string;
    value: string;
    id: string;
    onChange?: (e: FormEvent, item: FilterItem, key: number) => void;
    onClick?: (e?: FormEvent | MouseEventHandler<HTMLInputElement>, item?: FilterItem, key?: number, checked?: boolean) => void;
    isChecked?: boolean;
}
export interface FilterValue {
    label: Node;
    value: string;
}
export interface TextFilterProps {
    value?: string | FilterValue | (string | FilterValue)[] | Record<string, unknown>;
    placeholder?: string;
    onChange?: (e: React.MouseEvent | React.ChangeEvent | React.FormEvent<HTMLInputElement>, newSelection: string | FilterValue | (string | FilterValue)[], selection?: string | FilterValue) => void;
    onSubmit?: (e: React.FormEvent<HTMLInputElement>, value: string) => void;
    isDisabled?: boolean;
    'aria-label'?: string;
    id?: string;
    icon?: React.FunctionComponent;
    className?: string;
    innerRef?: React.Ref<HTMLInputElement>;
}
declare const TextFilter: React.FunctionComponent<TextFilterProps>;
export default TextFilter;
