"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isFilterValue = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("react");
var react_core_1 = require("@patternfly/react-core");
var react_icons_1 = require("@patternfly/react-icons");
require("./conditional-filter.css");
function isFilterValue(item) {
    return item.value !== undefined;
}
exports.isFilterValue = isFilterValue;
var TextFilter = function (_a) {
    var icon = _a.icon, id = _a.id, _b = _a.isDisabled, isDisabled = _b === void 0 ? false : _b, className = _a.className, onChange = _a.onChange, _c = _a.onSubmit, onSubmit = _c === void 0 ? function () { return undefined; } : _c, _d = _a.value, value = _d === void 0 ? '' : _d, placeholder = _a.placeholder, innerRef = _a.innerRef, props = __rest(_a, ["icon", "id", "isDisabled", "className", "onChange", "onSubmit", "value", "placeholder", "innerRef"]);
    var filterValue = value;
    var _e = (0, react_1.useState)(''), stateValue = _e[0], setStateValue = _e[1];
    var Icon = icon || react_icons_1.SearchIcon;
    var changeCallback = function (e, value) { return (onChange ? onChange(e, value) : setStateValue(value)); };
    return ((0, jsx_runtime_1.jsxs)(react_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(react_core_1.TextInput, { "aria-label": props['aria-label'] || 'text input', className: "ins-c-conditional-filter ".concat(className || ''), "data-ouia-component-type": "PF4/TextInput", id: id, isDisabled: isDisabled, value: (onChange ? (typeof value === 'string' ? filterValue : filterValue.value) : stateValue), onChange: function (_inputValue, e) { return changeCallback(e, e.target.value); }, onKeyDown: function (e) {
                    return e.key === 'Enter' && (onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit(e, (typeof value === 'string' ? filterValue : filterValue.value) || stateValue));
                }, ouiaId: "ConditionalFilter", placeholder: placeholder, "widget-type": "InsightsInput", ref: innerRef }), (0, jsx_runtime_1.jsx)(Icon, { size: "sm", className: "ins-c-search-icon" })] }));
};
exports.default = TextFilter;
//# sourceMappingURL=TextFilter.js.map