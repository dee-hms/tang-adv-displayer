var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import Icon404 from './icon-404';
import { Button, Title } from '@patternfly/react-core';
import '../InvalidObject/invalidObject.css';
var isBeta = function () {
    return window.location.pathname.split('/')[1] === 'beta' ? '/beta' : '';
};
var InvalidObject = function (_a) {
    var props = __rest(_a, []);
    return (_jsxs("section", __assign({}, props, { className: "pf-l-page__main-section pf-c-page__main-section ins-c-component_invalid-component" }, { children: [_jsx(Title, __assign({ headingLevel: "h1", size: "3xl" }, { children: "We lost that page" })), _jsx(Icon404, {}), _jsx(Title, __assign({ headingLevel: "h1", size: "xl", className: "ins-c-text__sorry" }, { children: "Let's find you a new one. Try a new search or return home." })), _jsx(Button, __assign({ variant: "link", component: "a", href: "".concat(window.location.origin).concat(isBeta()) }, { children: "Return to homepage" }))] })));
};
export default InvalidObject;
//# sourceMappingURL=InvalidObject.js.map