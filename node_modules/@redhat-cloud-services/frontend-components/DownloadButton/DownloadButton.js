"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var react_core_1 = require("@patternfly/react-core");
var react_1 = __importStar(require("react"));
var react_icons_1 = require("@patternfly/react-icons");
var DownloadButton = function (_a) {
    var _b = _a.extraItems, extraItems = _b === void 0 ? [] : _b, _c = _a.onSelect, onSelect = _c === void 0 ? function () { return undefined; } : _c, isDisabled = _a.isDisabled, tooltipText = _a.tooltipText, props = __rest(_a, ["extraItems", "onSelect", "isDisabled", "tooltipText"]);
    var _d = (0, react_1.useState)(false), isOpen = _d[0], setIsOpen = _d[1];
    var onToggle = function (isOpen) { return setIsOpen(isOpen); };
    var internalOnSelect = function () { return setIsOpen(function (prev) { return !prev; }); };
    var conditionallyTooltip = function (children) {
        return (0, jsx_runtime_1.jsx)(react_1.default.Fragment, { children: tooltipText ? (0, jsx_runtime_1.jsx)(react_core_1.Tooltip, __assign({ content: tooltipText }, { children: children })) : children });
    };
    return ((0, jsx_runtime_1.jsx)(react_1.default.Fragment, { children: conditionallyTooltip((0, jsx_runtime_1.jsx)(react_core_1.Dropdown, __assign({ isPlain: true }, props, { onSelect: internalOnSelect, toggle: (0, jsx_runtime_1.jsx)(react_core_1.DropdownToggle, __assign({ "aria-label": "Export", toggleIndicator: null, onToggle: onToggle, isDisabled: isDisabled, ouiaId: "Export" }, { children: (0, jsx_runtime_1.jsx)(react_icons_1.ExportIcon, { size: "sm" }) })), isOpen: isOpen, ouiaId: "Export", dropdownItems: __spreadArray([
                (0, jsx_runtime_1.jsx)(react_core_1.DropdownItem, __assign({ ouiaId: "DownloadCSV", component: "button", onClick: function (event) { return onSelect(event, 'csv'); }, isDisabled: isDisabled }, { children: "Export to CSV" }), "download-csv"),
                (0, jsx_runtime_1.jsx)(react_core_1.DropdownItem, __assign({ ouiaId: "DownloadJSON", component: "button", onClick: function (event) { return onSelect(event, 'json'); }, isDisabled: isDisabled }, { children: "Export to JSON" }), "download-json")
            ], extraItems, true) }))) }));
};
exports.default = DownloadButton;
//# sourceMappingURL=DownloadButton.js.map