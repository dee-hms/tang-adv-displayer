"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var react_core_1 = require("@patternfly/react-core");
var react_icons_1 = require("@patternfly/react-icons");
var consts_1 = require("./consts");
var Shield = function (_a) {
    var _b;
    var _c = _a.impact, impact = _c === void 0 ? 'N/A' : _c, _d = _a.hasLabel, hasLabel = _d === void 0 ? false : _d, _e = _a.size, size = _e === void 0 ? 'sm' : _e, _f = _a.hasTooltip, hasTooltip = _f === void 0 ? true : _f;
    var attributes = (_b = consts_1.impactList === null || consts_1.impactList === void 0 ? void 0 : consts_1.impactList[impact]) !== null && _b !== void 0 ? _b : consts_1.impactList.Unknown;
    var badgeProps = {
        'aria-hidden': 'false',
        'aria-label': attributes.title,
        color: attributes.color,
        size: size,
    };
    var badge = attributes.title === 'Unknown' ? (0, jsx_runtime_1.jsx)(react_icons_1.QuestionIcon, __assign({}, badgeProps)) : (0, jsx_runtime_1.jsx)(react_icons_1.SecurityIcon, __assign({}, badgeProps));
    var body = ((0, jsx_runtime_1.jsxs)("span", { children: [badge, " ", hasLabel && attributes.title] }));
    return ((0, jsx_runtime_1.jsx)("span", { children: hasTooltip ? ((0, jsx_runtime_1.jsx)(react_core_1.Tooltip, __assign({ content: (0, jsx_runtime_1.jsx)("div", { children: attributes.message }), position: 'bottom' }, { children: body }))) : (body) }));
};
exports.default = Shield;
//# sourceMappingURL=Shield.js.map