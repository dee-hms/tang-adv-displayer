var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import { Tooltip } from '@patternfly/react-core';
function parseCvssScore(cvssV2, cvssV3, withLabels) {
    if (withLabels === void 0) { withLabels = false; }
    var v2Tooltip = 'Prior to 2016 (approximately), CVEs were scored with Common Vulnerability Scoring System v2.';
    var naTooltip = 'CVEs published before 2005 (approximately) did not have a CVSS Base Score.';
    return ((cvssV3 && parseFloat(cvssV3).toFixed(1)) ||
        (cvssV2 && (_jsx(Tooltip, __assign({ content: v2Tooltip, position: 'left' }, { children: _jsxs("span", { children: ["".concat(parseFloat(cvssV2).toFixed(1)), " ", withLabels && '(CVSSv2)'] }) })))) || (_jsx(Tooltip, __assign({ content: naTooltip, position: 'left' }, { children: _jsx("span", { children: "N/A" }) }))));
}
export default parseCvssScore;
//# sourceMappingURL=parseCvssScore.js.map