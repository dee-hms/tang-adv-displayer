import React, { SetStateAction } from 'react';
import './tagFilterHook.scss';
import { AllTag, GroupValue } from './constants';
export declare const tagsFilterState: {
    tagsFilter: {};
};
export declare const TAGS_FILTER = "TAGS_FILTER";
export declare const tagsFilterReducer: (_state: any, { type, payload }: {
    type: typeof TAGS_FILTER | string;
    payload: any;
}) => {
    tagsFilter?: any;
};
declare type UseTagsFilter = (allTags?: AllTag[], loaded?: boolean, additionalTagsCount?: number, onShowMoreClick?: (...args: any[]) => void, reducer?: [Record<string, {
    [key: string]: GroupValue;
}>, (...args: any[]) => any] | [Record<string, {
    [key: string]: GroupValue;
}>], itemText?: string, showMoreTitle?: React.ReactNode) => {
    filter: any;
    chips: any;
    selectedTags: {
        [key: string]: GroupValue;
    };
    setValue: (newValue: unknown | SetStateAction<any>) => void;
    filterTagsBy: string;
    seFilterTagsBy: (value: string) => void;
};
export declare const useTagsFilter: UseTagsFilter;
export {};
