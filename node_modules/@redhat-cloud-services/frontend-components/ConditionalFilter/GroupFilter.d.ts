import React, { FormEvent, MouseEventHandler } from 'react';
import { ButtonVariant } from '@patternfly/react-core';
import { FilterMenuItemOnChange } from './groupFilterConstants';
import { GroupType } from './groupType';
import './group-filter.scss';
export interface GroupFilterItem {
    className?: string;
    id?: string;
    isChecked?: boolean;
    label?: Node | string;
    name?: string;
    noFilter?: boolean;
    onChange?: (value: boolean, event: FormEvent<HTMLInputElement>) => void;
    onClick?: (e?: FormEvent | MouseEventHandler<HTMLInputElement>, item?: GroupFilterItem, key?: number, checked?: boolean, groupName?: string, itemName?: string) => void;
    tagKey?: string;
    tagValue?: string;
    type?: GroupType;
    variant?: ButtonVariant;
    value?: string;
}
export interface TreeViewItem extends GroupFilterItem {
    hasCheck?: boolean;
    checkProps?: Record<string, boolean | null>;
    children?: TreeViewItem[];
    label?: string;
    name?: string;
}
export interface GroupItem {
    isSelected?: boolean;
    group: Group;
    item: GroupFilterItem;
}
export interface Group {
    groupSelectable?: boolean;
    id?: string;
    isSelected?: boolean;
    item?: GroupFilterItem;
    items: GroupFilterItem[];
    label?: string;
    noFilter?: boolean;
    type?: GroupType;
    value?: string;
}
export interface GroupFilterProps {
    className?: string;
    filterBy?: string;
    groups?: Group[];
    isFilterable?: boolean;
    items?: GroupFilterItem[];
    onFilter?: (value: string) => void;
    onChange?: FilterMenuItemOnChange;
    onShowMore?: (event: React.MouseEvent | React.KeyboardEvent | MouseEvent) => void;
    placeholder?: string;
    selected?: Record<string, Record<string, GroupItem | boolean>>;
    showMoreTitle?: React.ReactNode;
    showMoreOptions?: Record<string, unknown>;
    isDisabled?: boolean;
}
declare const GroupFilter: React.FunctionComponent<GroupFilterProps>;
export default GroupFilter;
