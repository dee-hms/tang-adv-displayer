"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkEmptyState = exports.tableIsSortedBy = exports.columnName2UrlParam = exports.checkRowCounts = exports.checkTableHeaders = void 0;
var lodash_1 = __importDefault(require("lodash"));
var selectors_1 = require("./selectors");
var CustomCommands_1 = require("./CustomCommands");
(0, CustomCommands_1.findElementByOuiaId)();
function checkTableHeaders(expectedHeaders) {
    return cy
        .get('table th[scope="col"]')
        .then(function ($els) {
        return lodash_1.default.map(Cypress.$.makeArray($els), 'innerText');
    })
        .should('deep.equal', expectedHeaders);
}
exports.checkTableHeaders = checkTableHeaders;
function checkRowCounts(n, isSelectableTable) {
    if (isSelectableTable === void 0) { isSelectableTable = false; }
    return isSelectableTable ? cy.get('table').find(selectors_1.TBODY).should('have.length', n) : cy.get('table').find(selectors_1.TBODY).find(selectors_1.ROW).should('have.length', n);
}
exports.checkRowCounts = checkRowCounts;
function columnName2UrlParam(name) {
    return name.toLowerCase().replace(/ /g, '_');
}
exports.columnName2UrlParam = columnName2UrlParam;
function tableIsSortedBy(columnTitle) {
    return cy.get('table').find("th[data-label=\"".concat(columnTitle, "\"]")).should('have.class', 'pf-c-table__sort pf-m-selected');
}
exports.tableIsSortedBy = tableIsSortedBy;
function checkEmptyState(title, checkIcon) {
    if (checkIcon === void 0) { checkIcon = false; }
    checkRowCounts(1);
    cy.get(selectors_1.TABLE)
        .ouiaId('empty-state')
        .should('have.length', 1)
        .within(function () {
        cy.get('.pf-c-empty-state__icon').should('have.length', checkIcon ? 1 : 0);
        cy.get("h5".concat(selectors_1.TITLE)).should('have.text', title);
    });
}
exports.checkEmptyState = checkEmptyState;
//# sourceMappingURL=TableUtils.js.map