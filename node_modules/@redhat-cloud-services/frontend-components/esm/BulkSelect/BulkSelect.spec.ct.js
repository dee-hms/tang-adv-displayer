var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { mount } from '@cypress/react';
import { BulkSelect } from '..';
describe('BulkSelect component', function () {
    var config = {
        items: [
            {
                title: 'Foo',
            },
            {
                title: 'Bar',
                props: {
                    isDisabled: true,
                },
            },
        ],
        count: 100,
    };
    it('renders checked component without data', function () {
        mount(_jsx(BulkSelect, { checked: true }));
        cy.get('.ins-c-bulk-select').find('>input').should('be.checked');
    });
    it('renders component with data', function () {
        mount(_jsx(BulkSelect, __assign({}, config)));
        cy.get('#toggle-checkbox-text').should('contain.text', '100');
        cy.get('.pf-c-dropdown__toggle-button').click();
        cy.get('.pf-c-dropdown__menu').find('>li>button').should('have.length', 2);
    });
    it('cannot be expanded or checked when disabled', function () {
        mount(_jsx(BulkSelect, __assign({}, config, { isDisabled: true })));
        cy.get('.pf-c-dropdown__toggle-button').click({ force: true });
        cy.get('.pf-c-dropdown__menu').should('not.exist');
        cy.get('#toggle-checkbox').check({ force: true }).should('not.be.checked');
    });
    it('buttons (do not) respond to being clicked', function () {
        config.items[0].onClick = cy.spy().as('enabledSpy');
        config.items[1].onClick = cy.spy().as('disabledSpy');
        config.onClick = cy.spy().as('checkboxSpy');
        mount(_jsx(BulkSelect, __assign({}, config)));
        cy.get('.pf-c-dropdown__toggle-button').click();
        cy.get('.pf-c-dropdown__menu').find('>li>button').eq(0).click();
        cy.get('.pf-c-dropdown__toggle-button').click();
        cy.get('.pf-c-dropdown__menu').find('>li>button').eq(1).click({ force: true });
        cy.get('#toggle-checkbox').check();
        cy.get('@enabledSpy').should('have.been.called');
        cy.get('@disabledSpy').should('not.have.been.called');
        cy.get('@checkboxSpy').should('have.been.called');
    });
});
//# sourceMappingURL=BulkSelect.spec.ct.js.map