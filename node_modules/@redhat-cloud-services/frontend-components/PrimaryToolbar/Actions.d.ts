import React from 'react';
import { DropdownProps, KebabToggleProps } from '@patternfly/react-core';
import { DownloadButtonProps } from '../DownloadButton';
declare type ActionObject = {
    key?: string;
    label: React.ReactNode;
    value?: number | string;
    onClick?: (event: MouseEvent | React.MouseEvent<any, MouseEvent> | React.KeyboardEvent<Element>, action: ActionObject, key: string | number) => void;
    props?: {
        [key: string]: any;
        className?: string;
    };
};
export declare type ActionsType = React.ReactNode | ActionObject;
export interface ActionsProps {
    actions?: ActionsType[];
    onSelect?: DropdownProps['onSelect'];
    overflowActions?: ActionsType[];
    dropdownProps?: DropdownProps;
    kebabToggleProps?: KebabToggleProps;
    exportConfig?: DownloadButtonProps;
}
export declare const overflowActionsMapper: (action: ActionsType, key: string | number) => JSX.Element;
export declare const actionPropsGenerator: (action: ActionsType, key: string | number) => {
    onClick: ((e: MouseEvent | React.MouseEvent<any, MouseEvent> | React.KeyboardEvent<Element>) => any) | undefined;
    component: any;
    children: React.ReactNode;
    className?: string | undefined;
};
declare const Actions: React.FunctionComponent<ActionsProps>;
export default Actions;
