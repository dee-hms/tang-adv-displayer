"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("react");
require("./tagModal.css");
var react_core_1 = require("@patternfly/react-core");
var classnames_1 = __importDefault(require("classnames"));
var TableWithFilter_1 = __importDefault(require("./TableWithFilter"));
var calculateChecked = function (rows, selected) {
    if (rows === void 0) { rows = []; }
    return rows.every(function (_a) {
        var id = _a.id;
        return selected && selected.find(function (_a) {
            var selectedId = _a.id;
            return selectedId === id;
        });
    })
        ? rows.length > 0
        : rows.some(function (_a) {
            var id = _a.id;
            return selected && selected.find(function (_a) {
                var selectedId = _a.id;
                return selectedId === id;
            });
        }) && null;
};
var unique = function (arr) { return arr.filter(function (_a, index, arr) {
    var id = _a.id;
    return arr.findIndex(function (_a) {
        var currId = _a.id;
        return currId === id;
    }) === index;
}); };
var TagModal = (function (_super) {
    __extends(TagModal, _super);
    function TagModal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            selectedTab: 0,
            activeTabKey: undefined,
        };
        _this.handleTabClick = function (_event, tabIndex) {
            _this.setState({ activeTabKey: tabIndex });
        };
        _this.renderTable = function (rows, columns, pagination, loaded, filters, selected, onSelect, onUpdateData, bulkSelect) {
            if (onUpdateData === void 0) { onUpdateData = function () { return undefined; }; }
            return ((0, jsx_runtime_1.jsx)(TableWithFilter_1.default, __assign({}, _this.props, { rows: rows, pagination: pagination, loaded: loaded, calculateChecked: calculateChecked, unique: unique, filters: filters, title: _this.props.title, systemName: _this.props.systemName, columns: columns, onSelect: onSelect, onUpdateData: onUpdateData, selected: selected, bulkSelect: bulkSelect }, { children: _this.props.children })));
        };
        return _this;
    }
    TagModal.prototype.render = function () {
        var _this = this;
        var _a = this.props, className = _a.className, title = _a.title, systemName = _a.systemName, _b = _a.toggleModal, toggleModal = _b === void 0 ? function () { return undefined; } : _b, _c = _a.isOpen, isOpen = _c === void 0 ? false : _c, _d = _a.rows, rows = _d === void 0 ? [] : _d, _e = _a.columns, columns = _e === void 0 ? [{ title: 'Name' }, { title: 'Tag source' }] : _e, children = _a.children, _f = _a.pagination, pagination = _f === void 0 ? { count: 10 } : _f, _g = _a.loaded, loaded = _g === void 0 ? false : _g, filters = _a.filters, onApply = _a.onApply, tabNames = _a.tabNames, onSelect = _a.onSelect, _h = _a.onUpdateData, onUpdateData = _h === void 0 ? function () { return undefined; } : _h, selected = _a.selected, _j = _a.tableProps, tableProps = _j === void 0 ? {} : _j, bulkSelect = _a.bulkSelect, props = __rest(_a, ["className", "title", "systemName", "toggleModal", "isOpen", "rows", "columns", "children", "pagination", "loaded", "filters", "onApply", "tabNames", "onSelect", "onUpdateData", "selected", "tableProps", "bulkSelect"]);
        var isTabbed = Array.isArray(tabNames);
        return ((0, jsx_runtime_1.jsx)(react_core_1.Modal, __assign({}, props, { className: (0, classnames_1.default)('ins-c-tag-modal', className), isOpen: isOpen, title: title || "Tags for ".concat(systemName), onClose: function () { return toggleModal(undefined, false); }, variant: "medium" }, (onApply && {
            actions: [
                (0, jsx_runtime_1.jsxs)(react_core_1.Button, __assign({ variant: "primary", isDisabled: isTabbed ? Object.values(selected || {}).every(function (values) { return !values || (values === null || values === void 0 ? void 0 : values.length) === 0; }) : !selected || (selected === null || selected === void 0 ? void 0 : selected.length) === 0, onClick: function (e) {
                        onApply();
                        toggleModal(e, true);
                    } }, { children: ["Apply ", isTabbed ? 'selected' : 'tags'] }), "confirm"),
                (0, jsx_runtime_1.jsx)(react_core_1.Button, __assign({ variant: "link", onClick: function (e) { return toggleModal(e, false); } }, { children: "Cancel" }), "cancel"),
            ],
        }), { children: isTabbed ? ((0, jsx_runtime_1.jsx)(react_core_1.Tabs, __assign({ activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, { children: tabNames.map(function (item, key) { return ((0, jsx_runtime_1.jsx)(react_core_1.Tab, __assign({ eventKey: key, title: (0, jsx_runtime_1.jsxs)(react_core_1.TabTitleText, { children: ["All ", item] }) }, { children: _this.renderTable(rows === null || rows === void 0 ? void 0 : rows[key], columns === null || columns === void 0 ? void 0 : columns[key], pagination === null || pagination === void 0 ? void 0 : pagination[key], loaded === null || loaded === void 0 ? void 0 : loaded[key], filters === null || filters === void 0 ? void 0 : filters[key], selected === null || selected === void 0 ? void 0 : selected[key], onSelect === null || onSelect === void 0 ? void 0 : onSelect[key], onUpdateData === null || onUpdateData === void 0 ? void 0 : onUpdateData[key], bulkSelect === null || bulkSelect === void 0 ? void 0 : bulkSelect[key]) }), key)); }) }))) : (this.renderTable(rows, columns, pagination, loaded, filters, selected, onSelect, onUpdateData, bulkSelect)) })));
    };
    return TagModal;
}(react_1.Component));
exports.default = TagModal;
//# sourceMappingURL=TagModal.js.map