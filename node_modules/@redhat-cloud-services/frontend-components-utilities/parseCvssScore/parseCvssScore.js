"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var react_core_1 = require("@patternfly/react-core");
function parseCvssScore(cvssV2, cvssV3, withLabels) {
    if (withLabels === void 0) { withLabels = false; }
    var v2Tooltip = 'Prior to 2016 (approximately), CVEs were scored with Common Vulnerability Scoring System v2.';
    var naTooltip = 'CVEs published before 2005 (approximately) did not have a CVSS Base Score.';
    return ((cvssV3 && parseFloat(cvssV3).toFixed(1)) ||
        (cvssV2 && ((0, jsx_runtime_1.jsx)(react_core_1.Tooltip, __assign({ content: v2Tooltip, position: 'left' }, { children: (0, jsx_runtime_1.jsxs)("span", { children: ["".concat(parseFloat(cvssV2).toFixed(1)), " ", withLabels && '(CVSSv2)'] }) })))) || ((0, jsx_runtime_1.jsx)(react_core_1.Tooltip, __assign({ content: naTooltip, position: 'left' }, { children: (0, jsx_runtime_1.jsx)("span", { children: "N/A" }) }))));
}
exports.default = parseCvssScore;
//# sourceMappingURL=parseCvssScore.js.map