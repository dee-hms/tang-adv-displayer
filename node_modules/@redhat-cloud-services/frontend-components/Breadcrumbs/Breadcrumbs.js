"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var classnames_1 = __importDefault(require("classnames"));
var react_core_1 = require("@patternfly/react-core");
var Breadcrumbs = function (_a) {
    var _b = _a.items, items = _b === void 0 ? [] : _b, _c = _a.current, current = _c === void 0 ? null : _c, _d = _a.className, className = _d === void 0 ? '' : _d, _e = _a.onNavigate, onNavigate = _e === void 0 ? function () { return undefined; } : _e, props = __rest(_a, ["items", "current", "className", "onNavigate"]);
    console.warn("Breadcrumbs from FE component shouldn't be used anymore. \
Instead use https://patternfly-react.surge.sh/documentation/react/components/breadcrumb from PF repository.");
    return ((0, jsx_runtime_1.jsxs)(react_core_1.Breadcrumb, __assign({ className: (0, classnames_1.default)('ins-c-breadcrumbs', className) }, props, { children: [items.map(function (oneLink, key) { return ((0, jsx_runtime_1.jsx)(react_core_1.BreadcrumbItem, __assign({ "data-key": key }, { children: (0, jsx_runtime_1.jsx)("a", __assign({ onClick: function (event) { return onNavigate(event, oneLink.navigate, key); }, "aria-label": oneLink.navigate }, { children: oneLink.title })) }), key)); }), current && (0, jsx_runtime_1.jsxs)(react_core_1.BreadcrumbItem, __assign({ isActive: true }, { children: [" ", current, " "] }))] })));
};
exports.default = Breadcrumbs;
//# sourceMappingURL=Breadcrumbs.js.map