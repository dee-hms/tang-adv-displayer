var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Button, ButtonVariant, Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';
import { Input } from '../Input';
import { SearchIcon } from '@patternfly/react-icons';
import '../SimpleTableFilter/simple-table-filter.css';
var SimpleFilter = function (_a) {
    var options = _a.options, widgetId = _a.widgetId, _b = _a.className, className = _b === void 0 ? '' : _b, _c = _a.placeholder, placeholder = _c === void 0 ? 'Search items' : _c, _d = _a.buttonTitle, buttonTitle = _d === void 0 ? 'Filter' : _d, _e = _a.onButtonClick, onButtonClick = _e === void 0 ? function () { return undefined; } : _e, _f = _a.onFilterChange, onFilterChange = _f === void 0 ? function () { return undefined; } : _f, _g = _a.onOptionSelect, onOptionSelect = _g === void 0 ? function () { return undefined; } : _g, _h = _a.searchIcon, searchIcon = _h === void 0 ? true : _h, props = __rest(_a, ["options", "widgetId", "className", "placeholder", "buttonTitle", "onButtonClick", "onFilterChange", "onOptionSelect", "searchIcon"]);
    var _j = useState(''), activeFilter = _j[0], setActiveFilter = _j[1];
    var _k = useState(false), isOpen = _k[0], setIsOpen = _k[1];
    var _l = useState(), selected = _l[0], setSelected = _l[1];
    var onToggle = function (isOpen) { return setIsOpen(isOpen); };
    var onInputChange = function (event) {
        var _a;
        setActiveFilter((_a = event.target) === null || _a === void 0 ? void 0 : _a.value);
        onFilterChange(event.target.value, selected);
    };
    var onFilterSubmit = function () {
        onButtonClick(activeFilter, selected);
    };
    var onFilterSelect = function (event, oneItem) {
        setSelected(oneItem);
        onOptionSelect(event, oneItem);
    };
    var onSelect = function () { return setIsOpen(false); };
    var dropdownItems = options &&
        options.items &&
        options.items.map(function (oneItem) { return (_jsx(DropdownItem, __assign({ component: "button", onClick: function (event) { return onFilterSelect(event, oneItem); }, "data-key": oneItem.value }, { children: oneItem.title }), oneItem.value)); });
    return (_jsxs("div", __assign({ className: "pf-c-input-group ins-c-filter ".concat(!buttonTitle ? 'ins-u-no-title' : '', " ").concat(className) }, props, { children: [options && (_jsx(Dropdown, { onSelect: onSelect, isOpen: isOpen, toggle: _jsx(DropdownToggle, __assign({ onToggle: onToggle }, { children: (selected && selected.title) || options.title || 'Dropdown' })), dropdownItems: dropdownItems })), _jsx(Input, { placeholder: placeholder, onKeyPress: function (event) { return event.key === 'Enter' && onInputChange(event); }, "widget-id": widgetId, onChange: function (event) { return onInputChange(event); } }), !buttonTitle && searchIcon && _jsx(SearchIcon, { size: "sm", className: "ins-c-search-icon" }), buttonTitle && (_jsx(Button, __assign({ variant: ButtonVariant.secondary, action: "filter", onClick: onFilterSubmit }, { children: buttonTitle })))] })));
};
export default SimpleFilter;
//# sourceMappingURL=SimpleTableFilter.js.map