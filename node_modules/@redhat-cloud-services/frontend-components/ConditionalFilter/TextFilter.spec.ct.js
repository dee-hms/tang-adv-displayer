"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("@cypress/react");
var TextFilter_1 = __importDefault(require("./TextFilter"));
describe('TextFilter component', function () {
    it('renders empty', function () {
        (0, react_1.mount)((0, jsx_runtime_1.jsx)(TextFilter_1.default, {}));
        cy.get('.ins-c-conditional-filter');
    });
    it('renders disabled with placeholder', function () {
        (0, react_1.mount)((0, jsx_runtime_1.jsx)(TextFilter_1.default, { placeholder: "foo", isDisabled: true }));
        cy.get('.ins-c-conditional-filter').should('be.disabled');
        cy.get('.ins-c-conditional-filter').invoke('attr', 'placeholder').should('contain', 'foo');
    });
    it('onChange called', function () {
        var ocSpy = cy.spy().as('cSpy');
        (0, react_1.mount)((0, jsx_runtime_1.jsx)(TextFilter_1.default, { onChange: ocSpy }));
        cy.get('.ins-c-conditional-filter').type('foo');
        cy.get('@cSpy').should('have.been.called');
    });
});
//# sourceMappingURL=TextFilter.spec.ct.js.map