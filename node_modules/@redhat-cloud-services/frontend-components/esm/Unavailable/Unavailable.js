var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';
import { ExclamationCircleIcon } from '@patternfly/react-icons';
import '../Unavailable/Unavailable.css';
var Unavailable = function () {
    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: "ins-c-empty-state__unavailable pf-m-redhat-font" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: "h5", size: "lg" }, { children: "This page is temporarily unavailable" })), _jsxs(EmptyStateBody, { children: ["Try refreshing the page. If the problem persists, contact your organization administrator or visit our", _jsxs("a", __assign({ href: "https://status.redhat.com/", target: "_blank", rel: "noopener noreferrer" }, { children: [' ', "status page"] })), ' ', "for known outages."] })] })));
};
export default Unavailable;
//# sourceMappingURL=Unavailable.js.map