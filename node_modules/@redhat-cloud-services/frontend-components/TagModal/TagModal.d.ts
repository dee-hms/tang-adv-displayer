import React, { Component } from 'react';
import './tagModal.scss';
import { TableWithFilterPagination, TableWithFilterProps } from './TableWithFilter';
import { ICell, IRow } from '@patternfly/react-table';
import { ConditionalFilterItem } from '../ConditionalFilter';
import { BulkSelectProps } from '../BulkSelect';
export declare type OnSelectRow = (selected?: IRow[]) => void;
export declare type OnUpdateData = (pagination: TableWithFilterPagination) => number | undefined;
export interface TagModalProps extends Omit<TableWithFilterProps, 'onSelect' | 'columns' | 'pagination' | 'loaded' | 'filters' | 'onUpdateData' | 'bulkSelect'> {
    title: string;
    systemName?: string;
    className?: string;
    toggleModal: (e?: React.MouseEventHandler<HTMLButtonElement> | React.MouseEvent<HTMLButtonElement, MouseEvent>, open?: boolean) => void;
    isOpen: boolean;
    tabNames?: string[];
    onApply?: (...args: unknown[]) => void;
    rows: IRow[] | IRow[][];
    columns: (string | ICell)[] | (string | ICell)[][];
    pagination: TableWithFilterPagination | TableWithFilterPagination[];
    loaded: boolean | boolean[];
    filters?: ConditionalFilterItem[][] | ConditionalFilterItem[];
    selected?: IRow[] | IRow[][];
    onSelect?: OnSelectRow | OnSelectRow[];
    onUpdateData?: OnUpdateData | OnUpdateData[];
    bulkSelect?: BulkSelectProps | BulkSelectProps[];
}
declare class TagModal extends Component<TagModalProps> {
    state: {
        selectedTab: number;
        activeTabKey: undefined;
    };
    handleTabClick: (_event: React.MouseEvent<HTMLElement, MouseEvent>, tabIndex: string | number) => void;
    renderTable: (rows: IRow[], columns: (string | ICell)[], pagination: TableWithFilterPagination, loaded: boolean, filters: ConditionalFilterItem[], selected: IRow[], onSelect?: ((selected?: IRow[] | undefined) => void) | undefined, onUpdateData?: (pagination: TableWithFilterPagination) => number | undefined, bulkSelect?: BulkSelectProps) => JSX.Element;
    render(): JSX.Element;
}
export default TagModal;
