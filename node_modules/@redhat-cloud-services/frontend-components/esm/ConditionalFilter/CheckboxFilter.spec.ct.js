import { jsx as _jsx } from "react/jsx-runtime";
import { mount } from '@cypress/react';
import Checkbox from './CheckboxFilter';
describe('CheckboxFilter component', function () {
    it('renders empty', function () {
        mount(_jsx(Checkbox, {}));
        cy.get('.ins-c-conditional-filter');
    });
    it('renders with correct attributes', function () {
        mount(_jsx(Checkbox, { placeholder: "foo", isDisabled: true }));
        cy.get('.ins-c-conditional-filter').invoke('attr', 'placeholder').should('contain', 'foo');
        cy.get('.ins-c-conditional-filter').should('be.disabled');
    });
    it('default value is set', function () {
        mount(_jsx(Checkbox, { value: ['foo'], items: [{ label: 'one' }, { label: 'two' }] }));
        cy.get('.pf-c-select__toggle').click();
        cy.get('.pf-c-select__menu').children().should('have.length', 2);
        cy.get('.pf-c-select__toggle-badge').should('contain', '1');
    });
    it('onChange called', function () {
        var onChangeSpy = cy.spy().as('ocSpy');
        mount(_jsx(Checkbox, { items: [{ label: 'one' }, { label: 'two' }], onChange: onChangeSpy }));
        cy.get('.pf-c-select__toggle').click();
        cy.get('.pf-c-select__menu > :nth-child(1)').click();
        cy.get('@ocSpy').should('have.been.called');
    });
});
//# sourceMappingURL=CheckboxFilter.spec.ct.js.map