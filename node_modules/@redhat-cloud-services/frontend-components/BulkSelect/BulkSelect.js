"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("react");
var classnames_1 = __importDefault(require("classnames"));
var react_core_1 = require("@patternfly/react-core");
require("./bulk-select.css");
var BulkSelect = function (_a) {
    var id = _a.id, _b = _a.isDisabled, isDisabled = _b === void 0 ? false : _b, _c = _a.items, items = _c === void 0 ? [] : _c, _d = _a.onSelect, onSelect = _d === void 0 ? function () { return undefined; } : _d, _e = _a.checked, checked = _e === void 0 ? false : _e, toggleProps = _a.toggleProps, count = _a.count, _f = _a.className, className = _f === void 0 ? '' : _f, ouiaId = _a.ouiaId, _g = _a.ouiaSafe, ouiaSafe = _g === void 0 ? true : _g, props = __rest(_a, ["id", "isDisabled", "items", "onSelect", "checked", "toggleProps", "count", "className", "ouiaId", "ouiaSafe"]);
    var _h = (0, react_1.useState)(false), isOpen = _h[0], setIsOpen = _h[1];
    var hasError = (0, react_1.useRef)(false).current;
    var ouiaStateId = (0, react_1.useRef)((0, react_core_1.getDefaultOUIAId)('RHI/BulkSelect')).current;
    var onToggle = function (isOpen) { return setIsOpen(isOpen); };
    var ouiaFinalId = ouiaId !== undefined ? ouiaId : ouiaStateId;
    return ((0, jsx_runtime_1.jsx)(react_1.Fragment, { children: items && items.length > 0 ? ((0, jsx_runtime_1.jsx)(react_core_1.Dropdown, __assign({ onSelect: function () { return onToggle(false); } }, props, { className: (0, classnames_1.default)(className, 'ins-c-bulk-select'), ouiaId: ouiaFinalId, ouiaSafe: ouiaSafe, toggle: (0, jsx_runtime_1.jsx)(react_core_1.DropdownToggle, __assign({}, toggleProps, { isDisabled: isDisabled, ouiaId: ouiaFinalId, splitButtonItems: [
                    (0, jsx_runtime_1.jsx)(react_1.Fragment, { children: hasError ? ((0, jsx_runtime_1.jsx)(react_core_1.DropdownToggleCheckbox, { id: id ? "".concat(id, "-toggle-checkbox") : 'toggle-checkbox', "aria-label": "Select all", onChange: onSelect, checked: checked, ouiaId: ouiaFinalId })) : ((0, jsx_runtime_1.jsx)(react_core_1.DropdownToggleCheckbox, __assign({ id: id ? "".concat(id, "-toggle-checkbox") : 'toggle-checkbox', "aria-label": "Select all", onChange: onSelect, isChecked: checked, ouiaId: ouiaFinalId }, { children: count ? "".concat(count, " selected") : '' }))) }, "split-checkbox"),
                ], onToggle: onToggle })), isOpen: isOpen, dropdownItems: __spreadArray(__spreadArray([], (count !== undefined && count > 0
                ? [
                    (0, jsx_runtime_1.jsxs)(react_core_1.DropdownItem, __assign({ isDisabled: true, className: (0, classnames_1.default)({
                            'ins-c-bulk-select__selected': !hasError,
                        }) }, { children: [count, " Selected"] }), "count"),
                ]
                : []), true), items.map(function (oneItem, key) { return ((0, jsx_runtime_1.jsx)(react_core_1.DropdownItem, __assign({ component: "button", ouiaId: "".concat(ouiaFinalId, "-").concat(oneItem.key || key), onClick: function (event) { return oneItem.onClick && oneItem.onClick(event, oneItem, key); } }, oneItem === null || oneItem === void 0 ? void 0 : oneItem.props, { children: oneItem.title }), oneItem.key || key)); }), true) }))) : ((0, jsx_runtime_1.jsx)(react_core_1.Checkbox, __assign({}, props, { "aria-label": "Select all", className: (0, classnames_1.default)(className, 'ins-c-bulk-select'), id: "".concat(id, "-checkbox"), isChecked: checked, onChange: onSelect }))) }));
};
exports.default = BulkSelect;
//# sourceMappingURL=BulkSelect.js.map