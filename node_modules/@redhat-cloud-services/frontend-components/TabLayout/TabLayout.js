"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var classnames_1 = __importDefault(require("classnames"));
require("./tab-layout.css");
var TabLayout = function (_a) {
    var children = _a.children, _b = _a.items, items = _b === void 0 ? [] : _b, classNames = _a.classNames, active = _a.active, _c = _a.onTabClick, onTabClick = _c === void 0 ? function () { return undefined; } : _c, props = __rest(_a, ["children", "items", "classNames", "active", "onTabClick"]);
    return ((0, jsx_runtime_1.jsxs)("section", __assign({}, props, { className: (0, classnames_1.default)(classNames, 'ins-tab-layout'), "widget-type": "InsightsTabs" }, { children: [(0, jsx_runtime_1.jsx)("div", __assign({ className: "ins-tabs" }, { children: items.map(function (oneItem) { return ((0, jsx_runtime_1.jsx)("div", __assign({ className: (0, classnames_1.default)({ active: oneItem.name === active }), onClick: function (event) { return onTabClick(event, oneItem); }, "widget-type": "InsightsTabsItem", "widget-id": oneItem.name }, { children: oneItem.title }), oneItem.name)); }) })), (0, jsx_runtime_1.jsx)("div", __assign({ className: "ins-tab-content" }, { children: children }))] })));
};
exports.default = TabLayout;
//# sourceMappingURL=TabLayout.js.map