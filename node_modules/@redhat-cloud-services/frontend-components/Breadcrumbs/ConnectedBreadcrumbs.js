"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("react");
var react_router_dom_1 = require("react-router-dom");
var Breadcrumbs_1 = __importDefault(require("./Breadcrumbs"));
var ConnectedBreadcrumbs = function (props) {
    var history = (0, react_router_dom_1.useHistory)();
    var location = (0, react_router_dom_1.useLocation)();
    var match = (0, react_router_dom_1.useRouteMatch)();
    (0, react_1.useEffect)(function () {
        console.warn('This component will be removed in future release (next month March), do not use it anymore!');
    }, []);
    var onNavigate = function (_event, _item, key) {
        history.go(-key);
    };
    var calculateBreadcrumbs = function () {
        var current = props.current, mappings = props.mappings;
        if (!current && mappings) {
            var root = match.path.split('/').slice(2);
            var rest = location.pathname.substring(match.path.length).split('/').slice(1);
            return __spreadArray(__spreadArray([], root, true), rest.map(function (item, key) { return mappings[key] || item; }), true);
        }
        else {
            return __spreadArray(__spreadArray([], location.pathname.split('/').slice(2, -1), true), [current], false);
        }
    };
    var mappedBreadcrumbs = calculateBreadcrumbs() || [];
    return ((0, jsx_runtime_1.jsx)(Breadcrumbs_1.default, __assign({}, props, { items: mappedBreadcrumbs.slice(0, -1).map(function (item) { return ({ title: item, navigate: item }); }), onNavigate: onNavigate, current: mappedBreadcrumbs.slice(-1)[0] })));
};
exports.default = ConnectedBreadcrumbs;
//# sourceMappingURL=ConnectedBreadcrumbs.js.map