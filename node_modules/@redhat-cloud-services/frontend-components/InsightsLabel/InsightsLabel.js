"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var react_icons_1 = require("@patternfly/react-icons");
var react_icons_2 = require("@patternfly/react-icons");
var react_icons_3 = require("@patternfly/react-icons");
var react_icons_4 = require("@patternfly/react-icons");
var react_core_1 = require("@patternfly/react-core");
var VALUE_TO_STATE = {
    1: { icon: (0, jsx_runtime_1.jsx)(react_icons_1.AngleDoubleDownIcon, {}), text: 'Low', color: 'blue' },
    2: { icon: (0, jsx_runtime_1.jsx)(react_icons_4.EqualsIcon, {}), text: 'Moderate', color: 'gold' },
    3: { icon: (0, jsx_runtime_1.jsx)(react_icons_2.AngleDoubleUpIcon, {}), text: 'Important', color: 'orange' },
    4: { icon: (0, jsx_runtime_1.jsx)(react_icons_3.CriticalRiskIcon, {}), text: 'Critical', color: 'red' },
};
var InsightsLabel = function (_a) {
    var _b = _a.value, value = _b === void 0 ? 1 : _b, text = _a.text, hideIcon = _a.hideIcon, rest = _a.rest, props = __rest(_a, ["value", "text", "hideIcon", "rest"]);
    return ((0, jsx_runtime_1.jsx)(react_core_1.Label, __assign({}, rest, props, { color: VALUE_TO_STATE[value].color, icon: !hideIcon && VALUE_TO_STATE[value].icon }, { children: text || VALUE_TO_STATE[value].text })));
};
exports.default = InsightsLabel;
//# sourceMappingURL=InsightsLabel.js.map